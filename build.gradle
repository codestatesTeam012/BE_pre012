plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
	id 'java'
}

group = 'com.codestates'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

// snippet 경로 (Rest docs parts)
ext {
	set('snippetsDir', file("build/generated-snippets"))
}

configurations {
	asciidoctorExtensions
}

repositories {
	mavenCentral()
}

dependencies {

	// Rest Docs 추가
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	// JPA 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// starter-web 추가
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// lombok 추가
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 개발용 h2 로컬 저장소 추가
	runtimeOnly 'com.h2database:h2'

	// 실제 배포용 저장소 추가
	runtimeOnly 'mysql:mysql-connector-java'

	// test 추가
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//Mapstruct 추가
	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

	// gson 추가
	implementation 'com.google.code.gson:gson'

	// 유효성 검사 추가
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'com.auth0:java-jwt:3.19.2'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	configurations "asciidoctorExtensions"
	inputs.dir snippetsDir
	dependsOn test
}


task copyDocument(type: Copy) {
	dependsOn asciidoctor
	println "asciidoctor output: ${asciidoctor.outputDir}"
	from file("${asciidoctor.outputDir}")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}

bootJar {
	dependsOn copyDocument
	from ("${asciidoctor.outputDir}") {
		into 'src/main/resources/static/docs'
	}
}